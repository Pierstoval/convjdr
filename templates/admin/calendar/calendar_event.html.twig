{% extends '@EasyAdmin/page/content.html.twig' %}

{% block page_title %}
    {{ 'Calendar'|trans }}
{% endblock %}
{% block content_title %}
    {{ 'Calendar'|trans }}
{% endblock %}

{% block head_stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@event-calendar/build@3.8.0/event-calendar.min.css">
{% endblock %}

{% block main %}
    {{ include('admin/calendar/_event_choice.html.twig', {events: events, event: event ?? null}, with_context = false) }}

    <hr>

    <h4>{{ 'Event:'|trans }} {{ event }}</h4>

    {{ include('admin/calendar/_calendar_event_filters.html.twig', {
        event: event,
        filter_states: filter_states,
    }, with_context = false) }}

    {% set cols_sizes = 10 / (event.venue.floors|length) %}

    <div class="container mb-4">

        <div id="admin_event_calendar" style="max-width: 100%; min-height: 500px; overflow-x: scroll; border: solid 1px #444; padding: 1rem;"></div>

    </div>

    <div class="row text-center m-0">
        <div class="col-2 card">
            <div class="card-body">
                {{ 'Hours'|trans }}
            </div>
        </div>

        {% for floor in event.venue.floors %}
            <div class="col-{{ cols_sizes }} card">
                <div class="card-body">
                    <div class="card">
                        <div class="card-header">{{ floor.name }}</div>
                        <div class="card-body">
                            <div class="row">
                                {% set floor_cols_sizes = 12 / (floor.rooms|length) %}
                                {% for room in floor.rooms %}
                                    <div class="col-{{ floor_cols_sizes }}">
                                        {{ room.name }}
                                    </div>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        {% endfor %}
    </div>

    {#{ include('admin/calendar/_calendar_event_table.html.twig', {
        hours: hours,
        event: event,
        filter_states: filter_states,
    }, with_context = false) }#}

    <div class="modal fade" id="event_modal" tabindex="-1" aria-labelledby="event_modal_label" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title fs-5" id="event_modal_label">{{ 'Event'|trans }}</h2>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="{{ 'Close'|trans }}"></button>
                </div>
                <div class="modal-body">
                    <h4 id="event_title"></h4>
                    <p id="event_start_end">
                         {{ 'event.startsAt.colon'|trans }} <span id="event_start"></span>
                        <br>
                         {{ 'event.endsAt.colon'|trans }} <span id="event_end"></span>
                    </p>
                    <form method="post" id="accept_reject_form">
                        <input type="hidden" name="_csrf" value="{{ csrf_token('accept_or_reject_schedule') }}">
                            <button
                                data-accept
                                data-confirm="{{ 'schedule.list.confirm_accept'|trans }}"
                                type="submit"
                                class="mx-0 my-2 btn btn-small btn-success card-link"
                                data-formaction-template="{{ path('admin_scheduled_animation_accept', {entityId: '__ENTITY_ID__'}) }}"
                                formaction=""
                            >
                                <i class="fa fa-check"></i> {{ 'schedule.list.confirm_accept_short'|trans }}
                            </button>
                            <button
                                data-reject
                                data-confirm="{{ 'schedule.list.confirm_reject'|trans }}"
                                type="submit"
                                class="mx-0 my-2 btn btn-small btn-danger card-link"
                                data-formaction-template="{{ path('admin_scheduled_animation_reject', {entityId: '__ENTITY_ID__'}) }}"
                                formaction=""
                            >
                            <i class="fa fa-xmark"></i> {{ 'schedule.list.confirm_reject_short'|trans }}
                        </button>
                    </form>
                </div>
                <div class="modal-footer">
                    <div id="empty_slot" class="">
                        <p>
                            {{ 'calendar.modal.empty_slot_add'|trans }}
                        </p>
                        <a
                            data-basehref="{{ path('admin_scheduled_animation_new', {slot_id: '__SLOT_ID__'}) }}"
                            href="#"
                            class="btn btn-primary"
                        >
                            <i class="fa fa-plus"></i> {{ 'calendar.infobox.add_schedule_to_timeslot'|trans }}
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block body_javascript %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/@event-calendar/build@3.8.0/event-calendar.min.js"></script>

    <script id="admin_event_calendar_data" defer>
        const eventModalElement = document.getElementById('event_modal');
        const eventModal = new bootstrap.Modal(eventModalElement);

        let ec = new EventCalendar(document.getElementById('admin_event_calendar'), {
            initialView: 'resourceTimelineDay',
            view: 'resourceTimelineDay',
            height: 'auto',
            nowIndicator: false,
            locale: '{{ app.user.locale|replace({'_': '-'}) }}',
            eventTimeFormat: {
                timeStyle: 'short',
                timeZone: '{{ app.user.timezone }}'
            },
            slotLabelFormat: {
                timeStyle: 'short',
                timeZone: '{{ app.user.timezone }}'
            },
            selectable: false,
            editable: false,
            eventStartEditable: false,
            eventDurationEditable: false,
            eventResizableFromStart: false,
            pointer: false,
            flexibleSlotTimeLimits: false,
            eventClick: function (info) {
                console.info('eventClick:', info);
                eventModalElement.querySelector('#event_title').innerHTML = info.event.title;
                eventModalElement.querySelector('#event_start').innerHTML = info.event.start;
                eventModalElement.querySelector('#event_end').innerHTML = info.event.end;
                eventModalElement.querySelector('#empty_slot').style.display = 'none';
                eventModalElement.querySelector('#accept_reject_form').style.display = 'none';
                eventModalElement.querySelectorAll('[data-formaction-template]').forEach(btn => btn.setAttribute('formaction', ''));

                if (info.event.extendedProps?.type === 'animation' && info.event.extendedProps?.can_be_validated) {
                    eventModalElement.querySelector('#accept_reject_form').style.display = 'block';
                    eventModalElement.querySelectorAll('[data-formaction-template]')
                        .forEach(btn => btn.setAttribute('formaction', btn.getAttribute('data-formaction-template').replace(/__ENTITY_ID__/, info.event.id)));
                } else if (info.event.extendedProps?.type === 'empty_slot') {
                    eventModalElement.querySelector('#empty_slot').style.display = 'block';
                    eventModalElement.querySelectorAll('[data-basehref]')
                        .forEach(btn => btn.setAttribute('href', btn.getAttribute('data-basehref').replace(/__SLOT_ID__/, info.event.id)));
                }

                eventModal.show();
            },
            resources: {{ json_resources|json_encode|raw }},
            events: {{ json_schedules|json_encode|raw }},
            date: '{{ event.startsAt|date('Y-m-d H:i:s') }}',
            highlightedDates: [
                '{{ event.startsAt|date('Y-m-d H:i:s') }}',
                '{{ event.endsAt|date('Y-m-d H:i:s') }}'
            ],
            validRange: {
                start: '{{ event.startsAt|date('Y-m-d H:i:s') }}',
                end: '{{ event.endsAt|date('Y-m-d H:i:s') }}',
            }
        });
    </script>
{% endblock %}
